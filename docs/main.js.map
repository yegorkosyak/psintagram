{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/breed-picker/breed-picker.component.ts","./src/app/breed-picker/breed-picker.component.html","./src/app/breed-picker/breed-picker.service.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'psintagram';\n}\n","<router-outlet>\n  <div class=\"container\"><app-breed-picker></app-breed-picker></div>\n</router-outlet>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BreedPickerComponent } from './breed-picker/breed-picker.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n@NgModule({\n  declarations: [AppComponent, BreedPickerComponent],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    MatSelectModule,\n    MatButtonModule,\n    BrowserAnimationsModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core';\nimport {\n  BreedList,\n  BreedImage,\n  BreedImageRandom,\n  BreedService,\n} from './breed-picker.service';\n\n@Component({\n  selector: 'app-breed-picker',\n  templateUrl: './breed-picker.component.html',\n  providers: [BreedService],\n  styleUrls: ['./breed-picker.component.scss'],\n})\nexport class BreedPickerComponent implements OnInit {\n  error: any;\n  breedData: any;\n  breedImage!: string;\n  selectedBreed: string = 'affenpinscher';\n\n  constructor(private breedService: BreedService) {}\n\n  setBreedList() {\n    this.breedService.getBreedList().subscribe({\n      next: (data: BreedList) => {\n        this.breedData = Object.entries(data.message);\n      },\n      error: (error) => (this.error = error),\n    });\n  }\n\n  setBreedImage(breed: string) {\n    this.breedService.getBreedImage(breed).subscribe({\n      next: (data: BreedImage) => {\n        this.breedImage = data.message[0];\n      },\n      error: (error) => (this.error = error),\n    });\n  }\n\n  setRandomImage(breed: string) {\n    this.breedService.getRandomImage(breed).subscribe({\n      next: (data: BreedImageRandom) => {\n        this.breedImage = data.message;\n      },\n      error: (error) => (this.error = error),\n    });\n  }\n\n  ngOnInit() {\n    this.setBreedList();\n    this.setBreedImage(this.selectedBreed);\n  }\n}\n","<div id=\"breed-picker\">\n  <h1>Psintagram</h1>\n  <mat-form-field appearance=\"fill\">\n    <mat-label>Breeds</mat-label>\n    <mat-select\n      [(value)]=\"selectedBreed\"\n      (selectionChange)=\"setBreedImage(selectedBreed)\"\n    >\n      <mat-option *ngFor=\"let breed of breedData\" [value]=\"breed[0]\">\n        {{ breed[0] }}\n      </mat-option>\n    </mat-select>\n  </mat-form-field>\n  <button\n    mat-raised-button\n    color=\"primary\"\n    (click)=\"setRandomImage(selectedBreed)\"\n  >\n    Wyświetlić inne zdjęcie tej samej rasy\n  </button>\n  <div class=\"image-wrap\">\n    <img src=\"{{ breedImage }}\" alt=\"\" />\n  </div>\n\n  <p>Poczytaj więcej o tej rasie na Wikipedii:</p>\n  <p>\n    <a href=\"https://en.wikipedia.org/wiki/{{ selectedBreed }}\" target=\"_blank\">\n      {{ selectedBreed }}</a\n    >\n  </p>\n</div>\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\ninterface Status {\r\n  status: string;\r\n}\r\n\r\nexport interface BreedImageRandom extends Status {\r\n  message: string;\r\n}\r\n\r\nexport interface BreedList extends Status {\r\n  message: { [key: string]: string[] };\r\n}\r\n\r\nexport interface BreedImage extends Status {\r\n  message: string[];\r\n}\r\n\r\n@Injectable()\r\nexport class BreedService {\r\n  breedListUrl = 'https://dog.ceo/api/breeds/list/all';\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getBreedList() {\r\n    return this.http.get<BreedList>(this.breedListUrl);\r\n  }\r\n  getBreedImage(breed: string) {\r\n    return this.http.get<BreedImage>(\r\n      `https://dog.ceo/api/breed/${breed}/images`\r\n    );\r\n  }\r\n  getRandomImage(breed: string) {\r\n    return this.http.get<BreedImageRandom>(\r\n      `https://dog.ceo/api/breed/${breed}/images/random`\r\n    );\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}